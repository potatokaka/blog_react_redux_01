{"version":3,"sources":["components/nav/Nav.js","actions/actionType.js","components/nav/NavContainer.js","actions/navAction.js","components/home/Home.js","actions/postAction.js","components/home/HomeContainer.js","components/about/About.js","components/posts/PostList.js","components/posts/AllPostsContainer.js","components/posts/SinglePost.js","components/posts/SinglePostContainer.js","components/posts/CreatePost.js","components/posts/CreatePostContainer.js","App.js","serviceWorker.js","reducers/navReducer.js","reducers/allPostsReducer.js","reducers/index.js","store.js","index.js"],"names":["Item","props","to","children","exact","navChange","path","match","className","onClick","Nav","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","GET_LATEST_POSTS","GET_ALL_POSTS","connect","state","nav","dispatch","value","Home","getLatestPosts","this","latestPosts","history","src","height","width","alt","map","item","key","push","title","author","body","Component","withRouter","post","request","axios","get","payload","About","PostList","getAllPosts","allPosts","SinglePost","handleDelete","params","deletePost","window","confirm","onEdit","setState","isEditing","handleInputChange","e","target","name","handleUpdate","editPost","getSinglePost","prevProps","prevState","singlePost","deleteDone","editDone","onChange","delete","put","CreatePost","onSubmit","preventDefault","createPost","createDone","htmlFor","App","component","HomeContainer","AllPostsContainer","SinglePostContainer","CreatePostContainer","Boolean","location","hostname","globalState","navReducer","action","initialState","allPostsReducer","data","Object","assign","rootReducer","combineReducers","store","applyMiddleware","promiseMiddleware","createStore","composeStoreWithMiddleWare","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96fb1c54.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport './nav.css';\n\nfunction Item(props) {\n    const {to, children, exact, navChange} = props;\n\n    return ( \n      <Route\n        path={to}\n        exact={exact}\n        children={({ match }) => ( //就是一個 functional component\n          <li className={match ? \"nav-link active\" : \"nav-link\"} onClick={() => {\n            navChange(to)\n          }}>\n            <Link to={to} className=\"nav-link\" >{children}</Link>\n          </li>\n        )}\n      />\n    );\n}\n\nconst Nav = ({navChange}) => (\n  <div>\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link to=\"/\" className=\"navbar-brand\">\n        <i className=\"material-icons\">\n            visibility\n          </i>\n      </Link>\n    \n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <Item to=\"/\"  navChange={navChange} exact={true}>\n            Home\n          </Item >\n          <Item to=\"/post\" navChange={navChange}>\n            Post\n          </Item>\n          <Item to=\"/about\" navChange={navChange}>\n            About\n          </Item>\n          <Item to=\"/createPost\" navChange={navChange}>\n            New Post\n          </Item>\n\n        </ul>\n      </div>\n    </nav>\n  </div>\n)\n\nexport default Nav;","export const NAV_CHANGE = 'NAV_CHANGE';\n\nexport const GET_LATEST_POSTS = 'GET_LATEST_POSTS';\nexport const GET_ALL_POSTS = 'GET_ALL_POSTS';\nexport const GET_SINGLE_POST = 'GET_SINGLE_POST';\nexport const CREATE_POST = 'CREATE_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const EDIT_POST = 'EDIT_POST';","import React from 'react';\nimport { connect } from 'react-redux';\nimport Nav from './Nav';\nimport { navChange } from '../../actions/navAction';\n\nconst NavContainer = props => <Nav {...props} />;\n\nconst mapStateToProps = state => ({\n  nav: state.nav.nav,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  navChange: nav => dispatch(navChange(nav)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavContainer);\n","import { NAV_CHANGE } from './actionType';\n\nexport const navChange = nav => ({\n  type: NAV_CHANGE,\n  value: nav,\n})","import React, {Component} from 'react';\n\nclass Home extends Component {\n\n  componentDidMount() {\n    const { getLatestPosts } = this.props;\n    getLatestPosts();\n  }\n\n  render() {\n    const { latestPosts, history } = this.props;\n\n    return (\n      <div>\n        \n        <div className=\"post-item col-md-10 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1562332651-12481360937c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\" height=\"550px\" width=\"100%\" alt=\"\" />\n          <h3>New Features: </h3>\n        </div>\n        \n        <div className=\"container col-md-10 mt-2\">\n          <div className=\"row post-list\">     \n          \n            {latestPosts.map((item)=> (\n              <div className=\"post-item col-md-3  mt-3 mb-4\" key={item.id} onClick={() => {\n                history.push('/post/' + item.id); //一個換頁的 function\n              }}>\n                <h4>{item.title}</h4>\n                <div className=\"post-item__author\">\n                Author: {item.author} \n                </div>\n                <div className=\"post-item__body\">\n                {item.body} \n                </div>\n              </div>\n            ))}\n            \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home;","import { GET_LATEST_POSTS, GET_ALL_POSTS, GET_SINGLE_POST, CREATE_POST, DELETE_POST, EDIT_POST} from './actionType';\nimport axios from 'axios';\n\nexport function getLatestPosts() {\n  const request = axios.get('https://qootest.com/posts?_limit=8&_sort=id&_order=desc');\n  return {\n    type: GET_LATEST_POSTS,\n    payload: request\n  }\n}\n\nexport function getAllPosts() {\n  const request = axios.get('https://qootest.com/posts?_sort=id&_order=desc');\n  return {\n    type: GET_ALL_POSTS,\n    payload: request\n  }\n}\n\nexport const getSinglePost = id => ({\n  type: GET_SINGLE_POST,\n  payload: axios.get(`https://qootest.com/posts/${id}`)\n});\n\nexport const createPost = (author, title, body ) => ({\n  type: CREATE_POST,\n  payload: axios.post('https://qootest.com/posts', {\n    author, title, body, \n  }),\n})\n\nexport const deletePost = id => ({\n  type: DELETE_POST,\n  payload: axios.delete(`https://qootest.com/posts/${id}`)\n})\n\nexport const editPost = (id, author, title, body) => ({\n  type: EDIT_POST,\n  payload: axios.put(`https://qootest.com/posts/${id}`, {\n    author, title, body,\n  })\n});\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Home from './Home';\nimport { getLatestPosts } from '../../actions/postAction';\nimport { withRouter } from 'react-router-dom';\n\nconst HomeContainer = props => <Home {...props} />;\n\nconst mapStateToProps = state => ({\n  latestPosts: state.post.latestPosts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getLatestPosts: () => {\n    dispatch(getLatestPosts());\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HomeContainer));\n\n","import React, {Component} from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <div>\n        \n        <div className=\"post-item col-md-8 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1524793186508-ac4eab29c957?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1650&q=80\" width=\"100%\" alt=\"\" />\n        </div>\n        <div className=\"post-item col-md-8 mx-auto mt-3 mb-4\">\n          <h3>About something</h3>\n          With designs as colorful as the muses that influence him, Peter Jensen confronts the fashion world with a gentle dose of eccentricity and humor.\n          “I’ve never fit into the fashion scene as many other people do. I’m terrible at networking”\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default About;","import React, {Component} from 'react';\n\nimport './posts.css';\n\nclass PostList extends Component {\n  \n  componentDidMount() {\n    // axios.get('https://qootest.com/posts')\n    // .then(response => {\n    //     this.setState({\n    //       posts: response.data\n    //     })\n    //   })\n    const { getAllPosts } = this.props;\n    getAllPosts();\n  }\n\n  render() {\n    const {allPosts, history} = this.props;\n   \n    return (\n      <div>\n        <div className=\"post-item col-md-8 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1531722569936-825d3dd91b15?ixlib=rb-1.2.1&auto=format&fit=crop&w=1650&q=80\" width=\"100%\" alt=\"\" />\n        </div>\n        \n        <div className=\"container mt-2\">\n          <div className=\"row post-list\">     \n              {allPosts.map((item)=> (\n                <div className=\"post-item col-md-8 mx-auto mt-3 mb-4\" key={item.id} onClick={() => {\n                  history.push('/post/' + item.id); //一個換頁的 function\n                }}>\n\n                  <h4>{item.title}</h4>\n                  <div className=\"post-item__author\">\n                    Author: {item.author} \n                  </div>\n                  <div className=\"post-item__body\">\n                    {item.body} \n                  </div>\n                </div>\n              ))}\n          </div>\n        </div>\n\n    </div> \n    )\n  }\n}\n\nexport default PostList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PostList from './PostList';\nimport { getAllPosts } from '../../actions/postAction';\nimport { withRouter } from 'react-router-dom';\n\nconst AllPostsContainer = props => <PostList {...props} />;\n\nconst mapStateToProps = state => ({\n  allPosts: state.post.allPosts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAllPosts: () => {\n    dispatch(getAllPosts());\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AllPostsContainer));\n\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport './posts.css';\n\nclass SinglePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: '',\n      title: '',\n      body: '',\n      isEditing: false,\n    }\n  }\n  \n  componentDidMount() {\n    const { getSinglePost } = this.props;\n    const { id } = this.props.match.params;\n    getSinglePost(id);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { singlePost, deleteDone, editDone, history} = this.props;\n\n    if (prevProps !== this.props) {\n      this.setState({\n        author: singlePost.author,\n        title: singlePost.title,\n        body: singlePost.body,\n      });\n    }\n\n    if (deleteDone !== prevProps.deleteDone && !deleteDone) {\n      history.push('/post')\n    }\n    \n    if (editDone !== prevProps.editDone && !editDone) {\n      // history.push('/post')\n      history.push(`/post/${singlePost.id}`);\n    }\n\n  }\n\n  handleDelete = () => {\n    const message = 'Are you sure deleting this?';\n    const { id } = this.props.match.params;\n    const { deletePost } = this.props;\n    if (window.confirm(message)) {\n      deletePost(id);\n      //history.push('/post')\n    } else {\n      return null;\n    }\n  }\n\n  onEdit = () => {\n    this.setState({\n      isEditing: !this.state.isEditing,\n    })\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleUpdate = () => {\n    const { author, title, body } = this.state;\n    const { editPost} = this.props;\n    const { id } = this.props.match.params;\n    editPost(id, author, title, body);\n    // history.push(`/post/${singlePost.id}`);\n    this.setState({\n      isEditing: !this.state.isEditing,\n    })\n  }\n\n  render() {\n    const { isEditing, title, body } = this.state;\n    const { singlePost } = this.props;\n\n    return (\n      <div>\n        <div className=\"post-item col-md-8 mx-auto mt-3\">\n          <img src=\"https://images.unsplash.com/photo-1553458287-b25ff2a8a778?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1651&q=80\" width=\"100%\" alt=\"\" />\n        </div>\n        <div className=\"post-item col-md-8 mx-auto mt-3 mb-4\">\n          {\n            !isEditing \n            ? <div>\n                <h2>{!singlePost.title ? 'loading...' : singlePost.title}</h2>\n                <p className=\"single-post__content\">{singlePost.body}</p>\n              </div>\n            : <div>\n                <textarea className=\"single-post__title\" value={title} onChange={this.handleInputChange} name='title' />\n                <textarea className=\"single-post__content__edit\" value={body} onChange={this.handleInputChange} name='body' />\n              </div>\n          }\n\n          <div className=\"d-flex justify-content-end\">\n            {\n              !isEditing \n              ? <div>\n                  <button className=\"btn btn-secondary mr-2\" onClick={this.onEdit}>Edit</button>\n                  <button className=\"btn btn-secondary  mr-2\" onClick={this.handleDelete}>Delete</button>\n                </div>\n              : <div>\n                  <button className=\"btn btn-secondary mr-2\" onClick={this.handleUpdate}>Update</button>\n                  <button className=\"btn btn-secondary  mr-2\" onClick={this.handleDelete}>Delete</button>\n                </div>\n            }\n            <Link to=\"/post\" className=\"btn btn-secondary\">Back</Link>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default SinglePost;","import React from 'react';\nimport { connect } from 'react-redux';\nimport SinglePost from './SinglePost';\nimport { getSinglePost, deletePost, editPost } from '../../actions/postAction';\nimport { withRouter } from 'react-router-dom';\n\nconst SinglePostContainer = props => <SinglePost {...props} />;\n\nconst mapStateToProps = state => ({\n  singlePost: state.post.singlePost,\n  deleteDone: state.post.deleteDone,\n  editDone: state.post.editDone,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getSinglePost: id => {\n    dispatch(getSinglePost(id));\n  },\n  deletePost: id => {\n    dispatch(deletePost(id));\n  },\n  editPost: (id, author, title, body) => {\n    dispatch(editPost(id, author, title, body));\n  }\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SinglePostContainer));\n\n","import React, {Component} from 'react';\n\nclass CreatePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      author: '',\n      title: '',\n      body: ''\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { createDone, history } = this.props\n    if (createDone !== prevProps.createDone && !createDone) {\n      history.push('/post')\n    }\n  }\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {createPost} = this.props;\n    const {author, title, body} = this.state;\n    createPost(author, title, body);\n    //history.push('/post');\n    this.setState({\n      author: '',\n      title: '',\n      body: ''\n    })\n  }\n\n  render() {\n    const {author, title, body} = this.state;\n    return (\n      <div className=\"col-md-8 mx-auto mt-3\">\n\n        <h1>Create a Post</h1>\n        <div>\n          <label htmlFor='author' >Author: </label>\n          <input value={author} className='form-control' name='author' onChange={this.handleInputChange} id='author' />\n        </div>\n        <div>\n          <label htmlFor='title' >Title: </label>\n          <input value={title} className='form-control' name='title' onChange={this.handleInputChange} id='title' />\n        </div>\n        <br/>\n        <label htmlFor='body' >Content: </label>\n        <textarea value={body} className='form-control' name='body' onChange={this.handleInputChange} id='content' />\n        <button className='btn btn-secondary mt-2' onClick={this.onSubmit}>submit</button>\n\n      </div>\n    )\n  }\n}\n\nexport default CreatePost;","import React from 'react';\nimport { connect } from 'react-redux';\nimport CreatePost from './CreatePost';\nimport { createPost } from '../../actions/postAction';\nimport { withRouter } from 'react-router-dom';\n\nconst CreatePostContainer = props => <CreatePost {...props} />;\n\nconst mapStateToProps = state => ({\n  createDone: state.post.createDone,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createPost: (author, title, body) => {\n    dispatch(createPost(author, title, body));\n  },\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(CreatePostContainer));","import React from 'react';\nimport './app.css';\nimport NavContainer from './components/nav/NavContainer';\nimport HomeContainer from './components/home/HomeContainer';\nimport About from './components/about/About';\nimport AllPostsContainer from './components/posts/AllPostsContainer';\nimport SinglePostContainer from './components/posts/SinglePostContainer';\nimport CreatePostContainer from './components/posts/CreatePostContainer';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst App = () => {\n  return (\n    <Router>\n      <NavContainer />\n      \n      <Switch>\n        <Route exact path=\"/\" component={HomeContainer} />\n        <Route exact path=\"/post\" component={AllPostsContainer} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/post/:id\" component={SinglePostContainer} />\n        <Route path=\"/createPost\" component={CreatePostContainer} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { NAV_CHANGE } from '../actions/actionType';\n\nconst globalState = {\n  nav: '',\n}\n\nconst navReducer = (state = globalState, action) => {\n  switch (action.type) {\n    \n    case NAV_CHANGE:\n      return {\n        ...globalState,\n        nav: action.value,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default navReducer;\n","import { GET_ALL_POSTS, GET_LATEST_POSTS, GET_SINGLE_POST, CREATE_POST, DELETE_POST, EDIT_POST } from '../actions/actionType';\n\n\nconst initialState = {\n  allPosts: [],\n  singlePost: {},\n  latestPosts: [],\n  createDone: false,\n  editDone: false,\n  deleteDone: false,\n}\n\nconst allPostsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    /*  case GET_ALL_POSTS:\n       return {\n         ...state,\n         allPosts: action.payload.data\n       }; */\n    \n    case `${GET_ALL_POSTS}_PENDING`:\n      return {\n        ...state,\n      };\n    case `${GET_ALL_POSTS}_FULFILLED`:\n      return {\n        ...state,\n        allPosts: action.payload.data,\n      };\n    case `${GET_ALL_POSTS}_REJECTED`:\n      return {\n        ...state,\n      }; \n\n    /* latest post ---------------------------*/\n    case `${GET_LATEST_POSTS}_PENDING`:\n      return {\n        ...state,\n      };\n    case `${GET_LATEST_POSTS}_FULFILLED`:\n      return {\n        ...state,\n        latestPosts: action.payload.data,\n      };\n    case `${GET_LATEST_POSTS}_REJECTED`:\n      return {\n        ...state,\n      };\n\n    /* single post ---------------------------*/\n    case `${GET_SINGLE_POST}_PENDING`:\n      return {\n        ...state,\n      };\n    case `${GET_SINGLE_POST}_FULFILLED`:\n      return {\n        ...state,\n        singlePost: action.payload.data,\n      };\n    case `${GET_SINGLE_POST}_REJECTED`:\n      return {\n        ...state,\n      }; \n    \n    case `${CREATE_POST}_PENDING`:\n      return {\n        ...state,\n        createDone: true,\n      };\n  \n    case `${CREATE_POST}_FULFILLED`:　\n      return Object.assign({}, state, {\n        singlePost: action.payload.data,\n        createDone: false,\n      })\n\n    case `${CREATE_POST}_REJECTED`:\n      return {\n        ...state,\n        createDone: false,\n      };\n\n    case `${EDIT_POST}_PENDING`:\n      return {\n        ...state,\n        editDone: true,\n      };\n    \n    case `${EDIT_POST}_FULFILLED`:　\n      return Object.assign({}, state, {\n        singlePost: action.payload.data,\n        editDone: false,\n      })\n\n    case `${EDIT_POST}_REJECTED`:\n      return {\n        ...state,\n        editDone: false,\n      };\n\n    case `${DELETE_POST}_PENDING`:\n      return {\n        ...state,\n        deleteDone: true,\n      };\n    \n    case `${DELETE_POST}_FULFILLED`:　\n      return Object.assign({}, state, {\n        singlePost: action.payload.data,\n        deleteDone: false,\n      })\n\n    case `${DELETE_POST}_REJECTED`:\n      return {\n        ...state,\n        deleteDone: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default allPostsReducer;\n","import { combineReducers } from 'redux';\nimport navReducer from './navReducer';\nimport allPostsReducer from './allPostsReducer';\n\nconst rootReducer = combineReducers({\n  nav: navReducer,\n  post: allPostsReducer,\n})\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport rootReducer from './reducers';\n\nconst composeStoreWithMiddleWare = applyMiddleware(\n  promiseMiddleware,\n)(createStore)\n\nconst store = composeStoreWithMiddleWare(rootReducer);\n// const store = createStore(rootReducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}